#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int getDeterminant(int key[2][2]) {
    return (key[0][0]*key[1][1] - key[0][1]*key[1][0]) % 26;
}

int modInverse(int a, int m) {
    a = a % m;
    for (int x = 1; x < m; x++)
        if ((a * x) % m == 1)
            return x;
    return -1;
}

void getInverseKey(int key[2][2], int invKey[2][2]) {
    int det = getDeterminant(key);
    det = (det + 26) % 26;
    int invDet = modInverse(det, 26);

    invKey[0][0] =  key[1][1] * invDet % 26;
    invKey[0][1] = -key[0][1] * invDet % 26;
    invKey[1][0] = -key[1][0] * invDet % 26;
    invKey[1][1] =  key[0][0] * invDet % 26;

    for (int i = 0; i < 2; i++)
for (int j = 0; j < 2; j++)
            invKey[i][j] = (invKey[i][j] + 26) % 26;
}

void encryptPair(int key[2][2], char in[2], char out[2]) {
    int a = in[0] - 'A';
    int b = in[1] - 'A';

    out[0] = (key[0][0]*a + key[0][1]*b) % 26 + 'A';
    out[1] = (key[1][0]*a + key[1][1]*b) % 26 + 'A';
}

void decryptPair(int invKey[2][2], char in[2], char out[2]) {
    int a = in[0] - 'A';
    int b = in[1] - 'A';

    out[0] = (invKey[0][0]*a + invKey[0][1]*b) % 26 + 'A';
    out[1] = (invKey[1][0]*a + invKey[1][1]*b) % 26 + 'A';
}

int main() {
    char text[100], output[100];
    int key[2][2], invKey[2][2];
    int len;

    printf("Enter 2x2 Key Matrix (integers):\n");
    for (int i = 0; i < 2; i++)
        for (int j = 0; j < 2; j++)
            scanf("%d", &key[i][j]);

    int det = getDeterminant(key);
if (modInverse((det + 26) % 26, 26) == -1) {
        printf("Key matrix is not invertible mod 26. Try again.\n");
        return 1;
    }

    printf("Enter plaintext (uppercase A-Z): ");
    scanf("%s", text);

    len = strlen(text);
    if (len % 2 != 0) {
        text[len++] = 'X'; 
        text[len] = '\0';
    }

    printf("Encrypted Text: ");
    for (int i = 0; i < len; i += 2) {
        char out[2];
        encryptPair(key, &text[i], out);
        printf("%c%c", out[0], out[1]);
    }

    getInverseKey(key, invKey);

    printf("\nDecrypted Text: ");
    for (int i = 0; i < len; i += 2) {
        char out[2];
        encryptPair(key, &text[i], out);  
        decryptPair(invKey, out, out);
        printf("%c%c", out[0], out[1]);
    }

    printf("\n");

    return 0;
}
